import tkinter as tk
from tkinter import scrolledtext, messagebox
import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin

sql_payloads = ["' OR '1'='1", "'; DROP TABLE users; --"]
xss_payloads = ["<script>alert(1)</script>", "<img src=x onerror=alert(1)>"]

def scan_url(url, output):
    output.delete('1.0', tk.END)
    output.insert(tk.END, f"üîç Scanning: {url}\n")

    try:
        response = requests.get(url)
        soup = BeautifulSoup(response.text, "html.parser")
        forms = soup.find_all("form")
        output.insert(tk.END, f"üßæ Found {len(forms)} form(s)\n\n")

        for form in forms:
            action = form.get("action")
            method = form.get("method", "get").lower()
            form_url = urljoin(url, action)
            inputs = form.find_all("input")
            form_data = {input_tag.get("name"): "test" for input_tag in inputs if input_tag.get("name")}

            for payload in sql_payloads:
                for key in form_data:
                    form_data[key] = payload
                resp = requests.post(form_url, data=form_data) if method == "post" else requests.get(form_url, params=form_data)
                if "sql" in resp.text.lower() or "syntax" in resp.text.lower():
                    output.insert(tk.END, f"‚ö†Ô∏è SQL Injection possible at: {form_url}\n")
                    break

            for payload in xss_payloads:
                for key in form_data:
                    form_data[key] = payload
                resp = requests.post(form_url, data=form_data) if method == "post" else requests.get(form_url, params=form_data)
                if payload in resp.text:
                    output.insert(tk.END, f"‚ö†Ô∏è XSS possible at: {form_url}\n")
                    break
    except Exception as e:
        output.insert(tk.END, f"‚ùå Error: {str(e)}\n")

def start_gui():
    window = tk.Tk()
    window.title("Web Vulnerability Scanner")
    window.geometry("700x500")
    window.configure(bg="#f0f0f0")

    tk.Label(window, text="Enter Website URL:", font=("Arial", 12), bg="#f0f0f0").pack(pady=5)
    url_entry = tk.Entry(window, width=70)
    url_entry.pack(pady=5)

    output_box = scrolledtext.ScrolledText(window, width=80, height=20, font=("Courier", 10))
    output_box.pack(pady=10)

    def run_scan():
        url = url_entry.get().strip()
        if not url.startswith("http"):
            messagebox.showwarning("Invalid URL", "Please enter a full URL starting with http:// or https://")
        else:
            scan_url(url, output_box)

    tk.Button(window, text="Scan", command=run_scan, bg="green", fg="white", width=10).pack(side=tk.LEFT, padx=30)
    tk.Button(window, text="Clear", command=lambda: output_box.delete('1.0', tk.END), bg="orange", width=10).pack(side=tk.LEFT)
    tk.Button(window, text="Exit", command=window.quit, bg="red", fg="white", width=10).pack(side=tk.RIGHT, padx=30)

    window.mainloop()

if __name__ == "__main__":
    start_gui()
